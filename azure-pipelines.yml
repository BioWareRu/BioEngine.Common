resources:
    containers:
        -   container: postgres
            image: postgres
            env:
                POSTGRES_USER: brc
                POSTGRES_PASSWORD: 123
            ports:
                5432:5432

variables:
    Version: 3.0.$(Build.BuildId)
    BE_POSTGRES_HOST: localhost
    BE_POSTGRES_USERNAME: brc
    BE_POSTGRES_PASSWORD: 123
    BE_POSTGRES_PORT: 5432

stages:
    -   stage: Build
        jobs:
            -   job: Build
                pool:
                    vmImage: Ubuntu 16.04
                steps:
                    -   task: UseDotNet@2
                        displayName: 'Install .Net Core 3.0'
                        inputs:
                            packageType: sdk
                            version: 3.0.100-preview8-013656
                            includePreviewVersions: true

                    -   task: DotNetCoreCLI@2
                        inputs:
                            command: test
                            publishTestResults: true
                            projects: 'tests/**/*.csproj'

                    -   task: DotNetCoreCLI@2
                        displayName: 'Create package'
                        inputs:
                            command: pack
                            configuration: Release
                            versioningScheme: byEnvVar
                            versionEnvVar: Version
                            verbosityPack: minimal
                            projects: src/**/*.csproj

                    -   task: PublishPipelineArtifact@0
                        displayName: 'Publish package as artifact'
                        inputs:
                            artifactName: 'packages'
                            targetPath: '$(Build.ArtifactStagingDirectory)'
                services:
                    postgres: postgres

    -   stage: Deploy
        dependsOn: Build
        condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
        jobs:
            -   job: Publish
                pool:
                    vmImage: Ubuntu 16.04
                steps:
                    -   download: current
                        artifact: packages

                    -   task: DotNetCoreCLI@2
                        displayName: 'Push package to internal feed'
                        inputs:
                            command: push
                            nuGetFeedType: internal
                            publishVstsFeed: BioEngine
                            versioningScheme: byEnvVar
                            versionEnvVar: Version
                            searchPatternPush: '$(Pipeline.Workspace)/**/*.nupkg'

                    -   task: NuGetCommand@2
                        displayName: 'Push package to nuget'
                        inputs:
                            command: 'push'
                            packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg'
                            nuGetFeedType: 'external'
                            publishFeedCredentials: 'BRC Nuget'


